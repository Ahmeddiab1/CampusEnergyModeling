%% ssc_pvsamv1.m - Test the SSC-MATLAB interface and utility scripts
%
% This test script executes a full-year SAM PV model in SSC using the
% MATLAB interface. It calls the SSC pvsamv1 module via the SSC-MATLAB
% interface.
%
% The model used in the test is the NREL Research Support Facility (RSF)
% Wing C PV array.
%
% FUNCTIONS:
%   ssc2matlab: importSSC, runSSC
%
% COMMENTS:
% 1. This test uses the file 'RSF_wing_C_pvsamv1.txt', which is an example
%    of a text file automatically generated by SAM when SAM executes SSC
%    to perform a specific simulation. Such files contain most of the input
%    variables for SSC for the most recently executed model for each SS
%    module. SAM places the files in [HOME]\SAM\ssc, where [HOME] is the
%    user's home directory. The files are named 'sscdbg_[MODULE].txt',
%    where [MODULE] represents the name of the SSC module that was called.
%    In this case, 'RSF_wing_C_pvsamv1.txt' represents data that was passed
%    to the pvsamv1 SSC module. The MATLAB utility function importSSC()
%    imports data from these text files for use with the MATLAB-SSC
%    interface.
%    
% 2. SAM overwrites the SSC text files each time it executes a model, so
%    one should copy the text file out of [HOME]\SAM\ssc and possibly
%    rename it, as has been done with 'RSF_wing_C_pvsamv1.txt'.

%% Setup
% Name of PNG plot (without extension)
plotname = 'hourly_ac_net';

%% Import PV-SAM Model
% The function importSSC() imports SSC variables from text and stores them
% in a MATLAB structure.
SSCvar = importSSC('RSF_wing_C_pvsamv1.txt');

% Change to a local weather file
% (The weather file given in the .txt run file from SSC is specific to the
% computer that originally ran the simulation and must be modified.)
idx = find(strcmp({SSCvar.Name}, 'weather_file'));
SSCvar(idx).Value = '../../data/724666TY.csv';

%% Run PV-SAM in SSC
% Requested outputs
output = struct( 'Name', {'hourly_ac_net'}, 'Type', {'array'} );

% Run SSC; get output as Simulink-compatible time series structure
out = runSSC('pvsamv1', SSCvar, output, '--ts', '--unload');

% Extract time series
ts = out.hourly_ac_net.Value;

% Plot the result to file
fig = figure('Visible', 'off');
plot(ts)
print(fig, plotname, '-dpng' );
